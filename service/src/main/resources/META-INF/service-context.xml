<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean name="waitlist.manage.agent"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass"
			value="com.nv.agent.service.useragents.WaitlistUserAgent" />
		<property name="jobDataMap">
			<map>
				<entry key="writeDao" value-ref="write.dao" />
			</map>
		</property>
		<property name="durability" value="true" />
	</bean>

	<!-- Fire at time given in cron expression -->
	<bean id="waitlist.manage.agent.cronTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="waitlist.manage.agent" />
		<property name="cronExpression">
			<value>${waitlist.cron.expression}</value>
		</property>
	</bean>

	<bean name="healthmonitor.agent"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass"
			value="com.nv.agent.service.useragents.HealthTrimUserAgent" />
		<property name="jobDataMap">
			<map>
				<entry key="writeDao" value-ref="write.dao" />
				<entry key="readDao" value-ref="read.dao" />
			</map>
		</property>
		<property name="durability" value="true" />
	</bean>

	<!-- Fire at time given in cron expression -->
	<bean id="healthmonitor.agent.cronTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="healthmonitor.agent" />
		<property name="cronExpression">
			<value>${health.cron.expression}</value>
		</property>
	</bean>

	<!-- Scheduler factory bean to glue together jobDetails and triggers to 
		Configure Quartz Scheduler -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="jobDetails">
			<list>
				<ref bean="waitlist.manage.agent" />
				<ref bean="healthmonitor.agent" />
			</list>
		</property>
		<property name="triggers">
			<list>
				<ref bean="waitlist.manage.agent.cronTrigger" />
				<ref bean="healthmonitor.agent.cronTrigger" />
			</list>
		</property>
	</bean>




	<bean class="com.nv.platform.json.JSONMapper" id="object.mapper" />


	<bean id="sendMsg" class="com.nv.agent.service.impl.AgentSendMessageImpl">
		<property name="templates">
			<list>
				<ref bean="reportHealth.template" />
			</list>
		</property>
		<property name="accessKey">
			<value>${amazon.access.key}</value>
		</property>
		<property name="secretKey">
			<value>${amazon.secret.key}</value>
		</property>
		<property name="mailFrom">
			<value>${mailFrom}</value>
		</property>
	</bean>
	<bean id="reportHealth.template" class="com.nv.ynw.email.ProviderSignUpEmailTemplate">
		<property name="s3Url">
			<value>${s3Url}</value>
		</property>
	</bean>

	<bean id="email.processor"
		class="com.nv.agent.service.event.processors.EmailEventProcessor">
		<constructor-arg index="0" ref="sendMsg" />
		<constructor-arg index="1" ref="write.dao" />
	</bean>

	<bean id="sendPushMsg" class="com.nv.agent.service.impl.AgentPushNotificationImpl">
		<constructor-arg index="0" value="${google.auth.key}" />
	</bean>

	<bean id="push.notification.processor"
		class="com.nv.agent.service.event.processors.PushNotificationEventProcessor">
		<constructor-arg index="0" ref="sendPushMsg" />
		<constructor-arg index="1" ref="write.dao" />
	</bean>
	<bean id="agent.event.handler" class="com.nv.agent.service.event.AgentEventHandler">
		<constructor-arg index="0">
			<map key-type="com.nv.ynw.event.action.YnwEventActionType"
				value-type="com.nv.agent.service.event.EventProcessor">
				<entry key="SEND_EMAIL_FOR_VERIFICATION" value-ref="email.processor"></entry>
				<!-- <entry key="SEND_PUSHMSG" value-ref="push.notification.processor"></entry> -->
			</map>
		</constructor-arg>
		<constructor-arg index="1" ref="read.dao" />
		<constructor-arg index="2" ref="object.mapper" />
		<constructor-arg index="3" ref="write.dao" />
	</bean>

	<bean id="agent.endpoint" class="com.nv.ynw.agent.rs.AgentEndpoint">
		<constructor-arg index="0" ref="agent.event.handler" />
	</bean>

	<bean id="agent.config" class="com.nv.ynw.agent.rs.ServerEndpointExporter" />

	<bean id="server.endpoint.confg" class="com.nv.ynw.agent.rs.ServerEndpointRegistration">
		<constructor-arg index="0" value="/server" />
		<constructor-arg index="1" ref="agent.endpoint" />
	</bean>


	<!-- <bean name="login.history.purge.agent" class="org.springframework.scheduling.quartz.JobDetailFactoryBean"> 
		<property name="jobClass" value="com.nv.agent.service.useragents.LoginHistoryUserAgent" 
		/> <property name="jobDataMap"> <map> <entry key="readDao" value-ref="read.dao" 
		/> <entry key="writeDao" value-ref="write.dao" /> </map> </property> <property 
		name="durability" value="true" /> </bean> Fire at 4.30 PM on 1th of every 
		month <bean id="login.history.purge.agent.cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"> 
		<property name="jobDetail" ref="login.history.purge.agent" /> <property name="cronExpression" 
		value="0 58 15 29 * ?" /> </bean> <bean name="alert.purge.agent" class="org.springframework.scheduling.quartz.JobDetailFactoryBean"> 
		<property name="jobClass" value="com.nv.agent.service.useragents.AlertUserAgent" 
		/> <property name="jobDataMap"> <map> <entry key="readDao" value-ref="read.dao" 
		/> <entry key="writeDao" value-ref="write.dao" /> </map> </property> <property 
		name="durability" value="true" /> </bean> Fire at 2.56 PM everyday <bean 
		id="alert.purge.agent.cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"> 
		<property name="jobDetail" ref="alert.purge.agent" /> <property name="cronExpression" 
		value="0 05 12 * * ?" /> </bean> -->
	<!-- <bean id="health.service" class="com.nv.agent.service.impl.AgentHealthManager" 
		init-method="init"> <constructor-arg index="0" ref="health.dao" /> <constructor-arg 
		index="1"> <list> <ref bean="sendMsg" /> <ref bean="sendPushMsg" /> </list> 
		</constructor-arg> <constructor-arg index="2" ref="object.mapper" /> </bean> -->

	<!-- <bean id="availability.cache.manager" class="com.nv.agent.service.impl.AvailabilityCacheManager"> 
		<property name="readDao"> <ref bean="read.dao" /> </property> <property name="cacheDao"> 
		<ref bean="cache.dao" /> </property> <property name="objectMapper"> <ref 
		bean="object.mapper" /> </property> </bean> -->
</beans>